node_workflows:
  install:
    # all set-state steps that should be created for the install workflow
    states: [ initial, creating, created, configuring, configured, starting, started ]
    operations:
    # all call-operation steps that should be created for the install workflow
    # each call-operation step is defined with its dependencies to other set-state step
      create:
        # initial -> creating -> create -> created
        states: [ initial ]
        preceding_state: creating
        following_state: created
        operation_host: SELF
      configure:
        # created -> configuring -> configure -> configured
        states: [ created ]
        preceding_state: configuring
        following_state: configured
        operation_host: SELF
      start:
        # configured -> starting -> start -> started
        states: [ configured ]
        preceding_state: starting
        following_state: started
        operation_host: SELF
  uninstall:
    # all set-state steps that should be created for the uninstall workflow
    states: [ stopping, stopped, deleting, deleted ]
    operations:
    # all call-operation steps that should be created for the uninstall workflow
    # each call-operation step is defined with its dependencies to other set-state step
      stop:
        # here the set-state to started will not be created, just a pre-condition will be checked to be sure that the node is in started state
        # stopping -> stop -> stopped
        states: [ started ]
        preceding_state: stopping
        following_state: stopped
        operation_host: SELF
      delete:
        # stopped -> deleting -> delete -> deleted
        states: [ stopped ]
        preceding_state: deleting
        following_state: deleted
        operation_host: SELF

relationship_workflows:
  install:
    operations:
      # all call-operation steps that should be created for the install workflow
      pre_configure_source:
        # source.created -> pre_configure_source -> source.configure
        source:
          preceding_state: created
          following_operations: [ configure ]
        operation_host: SOURCE
      pre_configure_target:
        # target.created -> pre_configure_target -> target.configure
        target:
          preceding_state: created
          following_operations: [ configure ]
        operation_host: TARGET
      post_configure_source:
        # source.configured -> post_configure_source -> source.start
        source:
          preceding_state: configured
          following_operations: [ start ]
        operation_host: SOURCE
      post_configure_target:
        # target.configured -> post_configure_target -> target.start
        target:
          preceding_state: configured
          following_operations: [ start ]
        operation_host: TARGET
      add_source:
        # target.started -> add_source
        target:
          preceding_state: started
        operation_host: TARGET
      add_target:
        # source.started -> add_target
        source:
          preceding_state: started
        operation_host: SOURCE
  uninstall:
    operations:
      remove_source:
        # remove_source -> target.stop
        target:
          following_operations: [ stop ]
        operation_host: TARGET
      remove_target:
        # remove_target -> source.stop
        source:
          following_operations: [ stop ]
        operation_host: SOURCE

relationships_weaving:
  # Default relationship weaving which is good enough because it corresponds to Tosca spec
  # Every relationship will have the same default weaving
  install:
    # target.started -> source.creating
    source:
      states:
        creating:
          wait_target_state: started
  uninstall:
    # source.deleted -> target.stopping
    target:
      states:
        stopping:
          wait_source_state: deleted



